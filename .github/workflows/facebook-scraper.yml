name: Facebook Scraper - Cloud Automation

on:
  schedule:
    # Run every 4 hours for optimal balance
    - cron: '0 */4 * * *'
  workflow_dispatch: # Allow manual triggering from GitHub UI

permissions:
  contents: write
  actions: write
  
jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🌐 Install Chrome and ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable xvfb
        
    - name: ⚙️ Create config file
      run: |
        if [ -z "${{ secrets.FACEBOOK_CONFIG }}" ]; then
          echo "⚠️ Warning: FACEBOOK_CONFIG secret not set, using example config"
          cp config.example.json config.json
        else
          echo '${{ secrets.FACEBOOK_CONFIG }}' > config.json
        fi
        
    - name: 🚀 Run Facebook scraper
      run: |
        export DISPLAY=:99
        Xvfb :99 -ac -screen 0 1280x1024x24 &
        sleep 3
        
        # Remove cooldown for GitHub Actions automation
        rm -f data/last_run.txt
        
        echo "🤖 Starting automated scrape..."
        python facebook_scrapper.py --max-posts 8 --headless
        
    - name: 📊 Generate static API
      run: |
        echo "📊 Generating static API files..."
        python generate_static_api.py
        
    - name: 💾 Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Actions Bot"
        
        # Add all changes
        git add -A
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "📝 No changes to commit"
        else
          # Create commit with timestamp
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          git commit -m "🤖 Automated update: $TIMESTAMP

          - Scraped latest posts from Kuensel Facebook
          - Updated static API files
          - Enhanced validation active
          
          Automated by GitHub Actions ⚡"
          
          # Push changes
          git push origin main
          echo "✅ Successfully pushed changes!"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🧹 Auto-cleanup old workflow runs
      run: |
        echo "🧹 Cleaning up old workflow runs..."
        
        # Install GitHub CLI
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y
        
        # Authenticate with GitHub token
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
        
        # Keep only last 25 workflow runs (conservative cleanup)
        echo "🗑️ Removing old workflow runs (keeping last 25)..."
        gh run list --json databaseId --jq '.[25:] | .[].databaseId' | head -20 | while read -r run_id; do
          if [ -n "$run_id" ]; then
            gh api repos/${{ github.repository }}/actions/runs/$run_id -X DELETE || echo "⚠️ Could not delete run $run_id"
          fi
        done
        
        echo "✅ Cleanup completed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
      
    - name: 📈 Summary
      run: |
        echo "🎯 Automation Summary:"
        echo "========================"
        echo "✅ Scraper: Completed successfully"
        echo "✅ API: Static files generated" 
        echo "✅ Git: Changes committed and pushed"
        echo "✅ Cleanup: Old workflow runs removed"
        echo ""
        echo "🔄 Next run: In 4 hours"
        echo "🌐 View results: https://${{ github.repository_owner }}.github.io/Facebook_Scrapper"
