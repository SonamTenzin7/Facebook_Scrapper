name: üßπ Advanced Workflow Cleanup Automation

on:
  schedule:
    # Run cleanup twice weekly - Wednesdays and Sundays
    - cron: '0 2 * * 0'  # Sundays at 2 AM UTC
    - cron: '0 2 * * 3'  # Wednesdays at 2 AM UTC
  workflow_dispatch:
    inputs:
      cleanup_type:
        description: 'Type of cleanup to perform'
        required: true
        default: 'standard'
        type: choice
        options:
        - 'standard'
        - 'aggressive' 
        - 'failed_only'
        - 'old_only'
      days_to_keep:
        description: 'Number of days to keep (for custom cleanup)'
        required: false
        default: '14'
        type: string

permissions:
  actions: write
  contents: read

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ Checkout repository
      uses: actions/checkout@v4
      
    - name: üìä Pre-cleanup analysis
      run: |
        echo "üîç Analyzing current workflow runs..."
        echo "Repository: ${{ github.repository }}"
        echo "Cleanup type: ${{ github.event.inputs.cleanup_type || 'standard' }}"
        
        # Get current run count using GitHub API
        TOTAL_RUNS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1" | \
          jq -r '.total_count')
        
        echo "üìà Current total workflow runs: $TOTAL_RUNS"
        echo "TOTAL_RUNS=$TOTAL_RUNS" >> $GITHUB_ENV
        
    - name: üßπ Standard Cleanup (Keep 14 days, min 20 runs)
      if: ${{ github.event.inputs.cleanup_type == 'standard' || github.event.inputs.cleanup_type == '' }}
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: ${{ github.event.inputs.days_to_keep || '14' }}
        keep_minimum_runs: 20
        
    - name: ‚ö° Aggressive Cleanup (Keep 7 days, min 10 runs)
      if: ${{ github.event.inputs.cleanup_type == 'aggressive' }}
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 10
        
    - name: ‚ùå Failed Runs Only Cleanup
      if: ${{ github.event.inputs.cleanup_type == 'failed_only' }}
      run: |
        echo "üóëÔ∏è  Cleaning up failed workflow runs..."
        
        # Get failed runs and delete them
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=failure&per_page=100" | \
          jq -r '.workflow_runs[].id' | \
          while read run_id; do
            echo "Deleting failed run: $run_id"
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
            sleep 1
          done
          
    - name: üìÖ Old Runs Only (Keep 30 days)
      if: ${{ github.event.inputs.cleanup_type == 'old_only' }}
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 30
        keep_minimum_runs: 50
        
    - name: üìà Post-cleanup analysis
      run: |
        echo "‚úÖ Cleanup completed!"
        
        # Wait a bit for API to update
        sleep 10
        
        # Get new run count
        NEW_TOTAL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1" | \
          jq -r '.total_count')
        
        DELETED=$((TOTAL_RUNS - NEW_TOTAL))
        
        echo "üìä Cleanup Summary:"
        echo "  - Previous total: $TOTAL_RUNS runs"
        echo "  - Current total: $NEW_TOTAL runs" 
        echo "  - Deleted: $DELETED runs"
        echo "  - Space saved: ~$((DELETED * 2))MB estimated"
        
        # Create a summary comment for manual runs
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "üéØ Manual cleanup completed by ${{ github.actor }}"
        else
          echo "‚è∞ Scheduled cleanup completed automatically"
        fi
